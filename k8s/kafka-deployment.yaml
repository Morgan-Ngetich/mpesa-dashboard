apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: bitnami/zookeeper:latest  # ✅ Pre-built image
          ports:
            - containerPort: 2181
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  selector:
    app: zookeeper
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: wait-for-zookeeper
          image: busybox
          command: ['sh', '-c', 'until nc -z zookeeper 2181; do echo "Waiting for Zookeeper..."; sleep 2; done; echo "Zookeeper is up!"']
      containers:
        - name: kafka
          image: bitnami/kafka:latest  # ✅ Updated to Bitnami's Kafka
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://0.0.0.0:9092
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          volumeMounts:
            - name: kafka-storage
              mountPath: /bitnami/kafka
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: kafka-pvc  # ✅ Persistent Volume for Kafka
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    app: kafka
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092
